{
  "version": 3,
  "sources": ["../src/core/contants.ts", "../src/models/base-element.model.ts", "../src/models/circle.model.ts", "../src/app.ts"],
  "sourcesContent": ["export class Constants {\r\n  // SVG name space URI\r\n  public static readonly svgNS = \"http://www.w3.org/2000/svg\";\r\n  // SVG element type circle\r\n  public static readonly svgTC = \"circle\";\r\n}\r\n", "/**\r\n * Base SVG element class\r\n */\r\nexport class BaseElement<T extends SVGElement> {\r\n  // SVG element instance\r\n  protected _i!: T;\r\n\r\n  get instance(): T {\r\n    return this._i;\r\n  }\r\n\r\n  // SVG element creation\r\n  create(): void {}\r\n\r\n  // click event handler for SVG element\r\n  hdlClickEv(handlerFunc: () => any): void {\r\n    this._i.addEventListener(\"click\", handlerFunc);\r\n  }\r\n}\r\n", "import { Constants } from \"../core/contants\";\r\nimport { BaseElement } from \"./base-element.model\";\r\n\r\n/**\r\n * Class for circle SVG element\r\n */\r\nexport class Circle extends BaseElement<SVGCircleElement> {\r\n  constructor(\r\n    // circle radius\r\n    public r: number,\r\n    // circle x coordination\r\n    public x: number,\r\n    // circle y coordination\r\n    public y: number,\r\n    // circle color\r\n    public c: string\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  override create(): void {\r\n    this._i = document.createElementNS(\r\n      Constants.svgNS,\r\n      Constants.svgTC\r\n    ) as SVGCircleElement;\r\n    this._i.cx.baseVal.value = this.x;\r\n    this._i.cy.baseVal.value = this.y;\r\n    this._i.r.baseVal.value = this.r;\r\n    this._i.style.fill = this.c;\r\n\r\n    this.hdlClickEv(() => {\r\n      console.log(`Circle at (${this.x}, ${this.y}) clicked!`);\r\n    });\r\n  }\r\n}\r\n", "import { Circle } from \"./models/circle.model\";\r\n\r\nclass App {\r\n  // SVG canvas element\r\n  private sc!: HTMLElement;\r\n\r\n  private init(): void {\r\n    this.sc = document.getElementById(\"svgCanvas\") as HTMLElement;\r\n    this.sc.setAttribute(\"width\", \"600\");\r\n    this.sc.setAttribute(\"height\", \"600\");\r\n\r\n    let x = new Circle(20, 50, 50, \"#F00\");\r\n    let y = new Circle(20, 100, 100, \"#0F0\");\r\n    let z = new Circle(20, 150, 150, \"#00F\");\r\n\r\n    x.create();\r\n    y.create();\r\n    z.create();\r\n\r\n    this.sc.appendChild(x.instance);\r\n    this.sc.appendChild(y.instance);\r\n    this.sc.appendChild(z.instance);\r\n  }\r\n\r\n  public run(): void {\r\n    this.init();\r\n  }\r\n}\r\n\r\nconst app = new App();\r\napp.run();\r\n"],
  "mappings": ";;;AAAO,MAAM,YAAN,MAAgB;AAAA,IAErB;AAAA;AAAA,WAAuB,QAAQ;AAAA;AAAA,IAE/B;AAAA;AAAA,WAAuB,QAAQ;AAAA;AAAA,EACjC;;;ACFO,MAAM,cAAN,MAAwC;AAAA,IAI7C,IAAI,WAAc;AAChB,aAAO,KAAK;AAAA,IACd;AAAA;AAAA,IAGA,SAAe;AAAA,IAAC;AAAA;AAAA,IAGhB,WAAW,aAA8B;AACvC,WAAK,GAAG,iBAAiB,SAAS,WAAW;AAAA,IAC/C;AAAA,EACF;;;ACZO,MAAM,SAAN,cAAqB,YAA8B;AAAA,IACxD,YAES,GAEA,GAEA,GAEA,GACP;AACA,YAAM;AARC;AAEA;AAEA;AAEA;AAAA,IAGT;AAAA,IAES,SAAe;AACtB,WAAK,KAAK,SAAS;AAAA,QACjB,UAAU;AAAA,QACV,UAAU;AAAA,MACZ;AACA,WAAK,GAAG,GAAG,QAAQ,QAAQ,KAAK;AAChC,WAAK,GAAG,GAAG,QAAQ,QAAQ,KAAK;AAChC,WAAK,GAAG,EAAE,QAAQ,QAAQ,KAAK;AAC/B,WAAK,GAAG,MAAM,OAAO,KAAK;AAE1B,WAAK,WAAW,MAAM;AACpB,gBAAQ,IAAI,cAAc,KAAK,CAAC,KAAK,KAAK,CAAC,YAAY;AAAA,MACzD,CAAC;AAAA,IACH;AAAA,EACF;;;AChCA,MAAM,MAAN,MAAU;AAAA,IAIA,OAAa;AACnB,WAAK,KAAK,SAAS,eAAe,WAAW;AAC7C,WAAK,GAAG,aAAa,SAAS,KAAK;AACnC,WAAK,GAAG,aAAa,UAAU,KAAK;AAEpC,UAAI,IAAI,IAAI,OAAO,IAAI,IAAI,IAAI,MAAM;AACrC,UAAI,IAAI,IAAI,OAAO,IAAI,KAAK,KAAK,MAAM;AACvC,UAAI,IAAI,IAAI,OAAO,IAAI,KAAK,KAAK,MAAM;AAEvC,QAAE,OAAO;AACT,QAAE,OAAO;AACT,QAAE,OAAO;AAET,WAAK,GAAG,YAAY,EAAE,QAAQ;AAC9B,WAAK,GAAG,YAAY,EAAE,QAAQ;AAC9B,WAAK,GAAG,YAAY,EAAE,QAAQ;AAAA,IAChC;AAAA,IAEO,MAAY;AACjB,WAAK,KAAK;AAAA,IACZ;AAAA,EACF;AAEA,MAAM,MAAM,IAAI,IAAI;AACpB,MAAI,IAAI;",
  "names": []
}
